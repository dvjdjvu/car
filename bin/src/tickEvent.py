#!/usr/bin/python3
#-*- coding: utf-8 -*-

from threading import Timer

class tickEvent():
    """
    Класс управления машиной.
    Для управления будет использоваться 2-ва состояния, фактическое и пользовательское.
    Фактическое состояние, в котором машина находится (с какой скоростью движется, 
    направление движения, состояние поворота колес).
    Пользовательское состояние, в каком находится пульт управления (в каком положении джойстик аксилиратора и т.п.)
    
    Два состояния нужны для сглаживания управления, т.к. без него будет резкий отклик на изменении состояния акселератора.
    (Машинка будет с максимальной скорости тут же тормозить, с 0-я максимально ускоряться)
    Что негативно скажется на механических элементах машины.
    
    Система управления будет сделана на таймере. 
    На каждом новом тике фактическое состояние будет плавно доводиться до пользовательского.
    """
    
    def __init__(self, time = 2):
        """
        Инициализация
        
        Args:
            time: Время между тиками в миллисекундах.
        """
        
        self.time = time
        
        self.start()
    
    def __del__(self):
        """
        Деструктор
        """
        self.timer.cancel()

    def start(self):
        self.timer = Timer(self.time, self.update)
        self.timer.start()

    def update(self):
        print("Hello World")
        
        self.start()

if __name__ == "__main__":

    tE = tickEvent()
    
